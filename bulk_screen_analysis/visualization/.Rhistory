ylim = c(-8,8),
type = "hist",
col.histogram = '#6B8993FF',
fill.histogram = '#6B8993FF')
dataTrack_up <- DataTrack(range = annot[df$color=='#E7695DFF'],
data = df$score[df$color=='#E7695DFF'],
name = "        VPR",
ylim = c(-8,8),
type = "hist",
col.histogram = '#E7695DFF',
fill.histogram = '#E7695DFF')
#dataTrack <- OverlayTrack(trackList = list( dataTrack_down,dataTrack_up),background.title='#e76f3d')
dataTrack <- OverlayTrack(trackList = list(dataTrack_ns, dataTrack_down,dataTrack_up),background.title='#e76f3d')
# KRAB
df_k <- KRAB_bin_results %>%
mutate("score" = -log10(fdr)) %>%
mutate("color" = ifelse(fdr < 0.05, ifelse(coeff < 0, "#6B8993FF", "#E7695DFF"), "#D2D2D2FF")) %>%
mutate("sig" = as.numeric(fdr < 0.05))
dataTrack_k <- DataTrack(
range = annot,
data = df_k$coeff,
name = "    KRAB",
ylim = c(-0.04, 0.04),
type = "heatmap",
gradient = c("#6B8993FF", "white", "#E7695DFF"),
background.title = "#00a7c7"
)
dataTrack2_k <- DataTrack(
range = annot,
data = df_k$score,
name = "    KRAB",
ylim = c(0, 8),
type = "heatmap",
gradient = c("white", "black"),
background.title = "#00a7c7"
)
# dataTrack_k <- OverlayTrack(trackList = list(dataTrack_ns_k,dataTrack_down_k,dataTrack_up_k),background.title='#00a7c7')
pdf("both_constructs_distance_score_promoter.pdf", width = 10, height = 5)
plotTracks(list(dataTrack, ATACtrack, H3K27ACtrack, PHOX2Btrack, HAND2track, gtrack, superenhancer, hl_phox), from = 41734346, to = 41763745, sizes = c(4, 1, 1, 1, 1, 1, 1, 2), groupAnnotation = "group", Boeva = "#7C0A02", legend = TRUE, cex.title = 0.8, rot.title = 1, title.width = 2)
plotTracks(list(dataTrack_k, ATACtrack, H3K27ACtrack, PHOX2Btrack, HAND2track, gtrack, superenhancer, hl_phox), from = 41734346, to = 41763745, sizes = c(4, 1, 1, 1, 1, 1, 1, 2), groupAnnotation = "group", Boeva = "#7C0A02", legend = TRUE, cex.title = 0.8, rot.title = 1, title.width = 2)
plotTracks(list(dataTrack, dataTrack_k, ATACtrack, H3K27ACtrack, PHOX2Btrack, HAND2track, gtrack, superenhancer, hl_phox), from = 41734346, to = 41763745, sizes = c(4, 4, 1, 1, 1, 1, 1, 1, 2), groupAnnotation = "group", Boeva = "#7C0A02", legend = TRUE, cex.title = 0.8, rot.title = 1, title.width = 2)
dev.off()
source("~/Documents/Phox2b/PAPER/visualization/plots_script.R")
source("~/Documents/Phox2b/PAPER/visualization/plots_script.R")
source("~/Documents/Phox2b/PAPER/visualization/plots_script.R")
source("~/Documents/Phox2b/PAPER/visualization/plots_script.R")
# Visualization Scripts for Phox2B project
# Author: Lorena Sofia Lopez Zepeda``
# Version: 2021-11-21
# Packages
library(tidyverse)
# Parameters
setwd("~/Documents/Phox2b/PAPER/visualization/")
# ============================================================================
# Loading results
# ============================================================================
# ==== Guides =====
VPR_guide_results_plot <- read_csv("VPR_guide_results_plot.csv")
KRAB_guide_results_plot <- read_csv("KRAB_guide_results_plot.csv")
# ==== Bins =====
VPR_window_results_plot <- read_csv("VPR_window_results_plot.csv")
KRAB_window_results_plot <- read_csv("KRAB_window_results_plot.csv")
# ==== Regions =====
VPR_results_plot <- read_csv("VPR_regions_results_plot.csv")
KRAB_results_plot <- read_csv("KRAB_regions_results_plot.csv")
# ============================================================================
# Plotting functions and values
# ============================================================================
# establishing theme and colors for the plots
mycolors <- c("#6B8993FF", "#E7695DFF", "#D2D2D2FF")
mycolorstable <- c("#6B8993FF", "#E7695DFF", "#969696FF")
names(mycolors) <- c("Depleted", "Enriched", "NoChange")
names(mycolorstable) <- c("Depleted", "Enriched", "NoChange")
theme_dusa <- function() {
ggplot2::theme(
panel.background = element_rect(fill = "transparent"),
plot.background = element_rect(fill = "transparent"),
legend.background = element_rect(fill = "transparent"),
legend.box.background = element_rect(fill = "transparent")
)
}
# ==== phox_volcano_plot =====
phox_volcano_plot <- function(df) {
ggplot(df, aes(x = estimate, y = -log10(fdr), col = Result)) +
geom_point(alpha = 0.70) +
theme_dusa() +
scale_color_manual(values = mycolors)
}
phox_volcano_plot_guides <- function(df) {
ggplot(df, aes(x = logfold, y = -log10(fdr), col = Result)) +
geom_jitter(alpha = 0.5, width = 0.25, height = 0.25) +
theme_dusa() +
scale_color_manual(values = mycolors)
}
# ==== tabulation plots =====
tab_plot <- function(df) {
ggplot(df, aes(VPR, KRAB)) +
geom_point(aes(size = Freq), color = "grey") +
theme_classic() +
scale_size_continuous(range = c(10, 30)) +
geom_text(aes(label = Freq)) +
theme(
legend.position = "none",
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18)
)
}
# ============================================================================
# Regions plot
# ============================================================================
pdf('region_images.pdf',width = 6, height = 4)
# ==== VPR =====
v_r <- phox_volcano_plot(VPR_results_plot)
v_r +
xlim(-0.075, 0.075) +
ylim(0, 60) +
ggtitle("VPR regions")
# ==== KRAB =====
k_r <- phox_volcano_plot(KRAB_results_plot)
k_r +
xlim(-0.075, 0.075) +
ylim(0, 60) +
ggtitle("KRAB regions")
# ==== Both =====
full_regions_results_plot <- rbind(VPR_results_plot, KRAB_results_plot) %>%
drop_na(Gene)
b_r <- phox_volcano_plot(full_regions_results_plot)
b_r +
xlim(-0.075, 0.075) +
ylim(0, 60) +
scale_color_manual(values = mycolors) +
facet_wrap(~Construct) +
ggtitle("Region Results by Construct")
# ==== Cross tabulation =====
library(GGally)
ggtable(full_regions_results_plot, "Result", "Construct", title = "Regions results by construct")
ggtable(full_regions_results_plot, "Result", "Construct", cells = "row.prop", title = "Regions results by construct (proportion)", mapping = ggplot2::aes(color = Result, )) +
scale_color_manual(values = mycolorstable)
dev.off()
# ============================================================================
# Bins
# ============================================================================
pdf('window_images.pdf',width = 6, height = 4)
# ==== VPR =====
v_w <- phox_volcano_plot(VPR_window_results_plot)
v_w +
xlim(-0.075, 0.075) +
ylim(0, 8) +
ggtitle("VPR bins")
# ==== KRAB =====
k_w <- phox_volcano_plot(KRAB_window_results_plot)
k_w +
xlim(-0.075, 0.075) +
ylim(0, 8) +
ggtitle("KRAB bins")
# ==== Both =====
full_window_results_plot <- rbind(VPR_window_results_plot, KRAB_window_results_plot)
b_w <- phox_volcano_plot(full_window_results_plot)
b_w+
xlim(-0.075, 0.075) +
ylim(0, 8) +
facet_wrap(~Construct) +
ggtitle("Window Results by Construct")
# ==== tabulation =====
ggtable(full_window_results_plot, "Result", "Construct", title = "Window results by construct")
ggtable(full_window_results_plot, "Result", "Construct", cells = "row.prop", title = "Window results by construct (proportion)", mapping = ggplot2::aes(color = Result, )) +
scale_color_manual(values = mycolorstable)
dev.off()
# ==== Bin/construct table =====
VPR_hits <- VPR_window_results_plot %>% filter(Result != "NoChange")
KRAB_hits <- KRAB_window_results_plot %>% filter(Result != "NoChange")
shared_windows <- inner_join(VPR_hits, KRAB_hits, by = "bin", suffix = c(".VPR", ".KRAB")) %>%
dplyr::select(bin, Result.VPR, Result.KRAB)
# ==== Shared bins in constructs =====
shared_windows_table <- shared_windows %>%
dplyr::mutate("VPR_results" = ifelse(Result.VPR == "Depleted", -1, 1)) %>%
dplyr::mutate("KRAB_results" = ifelse(Result.KRAB == "Depleted", -1, 1)) %>%
mutate("Similar" = (sign(VPR_results) == sign(KRAB_results))) %>%
dplyr::select(bin, VPR_results, KRAB_results, Similar)
# ==== Shared bins plot =====
shared_bins <- as.data.frame(table(shared_windows$Result.VPR, shared_windows$Result.KRAB))
colnames(shared_bins) <- c("VPR", "KRAB", "Freq")
g <- tab_plot(shared_bins)
pdf("significant_bins_both.pdf")
g
dev.off()
# ============================================================================
# Guides
# ============================================================================
pdf("guide_images.pdf", width = 6, height = 4)
# ==== VPR =====
v_g <- phox_volcano_plot_guides(VPR_guide_results_plot)
v_g +
xlim(-7.5, 7.5) +
ylim(0, 20) +
ggtitle("VPR guides (FDR)")
# ==== KRAB =====
k_g <- phox_volcano_plot_guides(KRAB_guide_results_plot)
k_g +
xlim(-7.5, 7.5) +
ylim(0, 20) +
ggtitle("KRAB guides (FDR)")
# ==== Both =====
VPR_guide_results_plot$Construct <- rep("VPR", nrow(VPR_guide_results_plot))
KRAB_guide_results_plot$Construct <- rep("KRAB", nrow(KRAB_guide_results_plot))
full_guide_results_plot <- rbind(VPR_guide_results_plot, KRAB_guide_results_plot)
b_g <- phox_volcano_plot_guides(full_guide_results_plot)
b_g +
xlim(-7.5, 7.5) +
ylim(0, 20) +
facet_wrap(~Construct) +
ggtitle("Guide Results by Construct")
# ==== tabulation =====
ggtable(full_guide_results_plot, "Result", "Construct", title = "Guide results by construct")
ggtable(full_guide_results_plot, "Result", "Construct", cells = "row.prop", title = "Guide results by construct (proportion)", mapping = ggplot2::aes(color = Result, )) +
scale_color_manual(values = mycolorstable)
dev.off()
# GUIDE/construct table
VPR_hits <- VPR_guide_results_plot %>% filter(Result != "NoChange")
KRAB_hits <- KRAB_guide_results_plot %>% filter(Result != "NoChange")
shared_windows <- inner_join(VPR_hits, KRAB_hits, by = "GUIDE", suffix = c(".VPR", ".KRAB")) %>%
dplyr::select(GUIDE, Result.VPR, Result.KRAB)
# Shared GUIDE in constructs
shared_windows_table <- shared_windows %>%
dplyr::mutate("VPR_results" = ifelse(Result.VPR == "Depleted", -1, 1)) %>%
dplyr::mutate("KRAB_results" = ifelse(Result.KRAB == "Depleted", -1, 1)) %>%
mutate("Similar" = (sign(VPR_results) == sign(KRAB_results))) %>%
dplyr::select(GUIDE, VPR_results, KRAB_results, Similar)
# ==== tabulation plot =====
shared_guides <- as.data.frame(table(shared_windows$Result.VPR, shared_windows$Result.KRAB))
colnames(test) <- c("VPR", "KRAB", "Freq")
g <- tab_plot(shared_guides)
pdf("significant_GUIDE.pdf")
g
dev.off()
shared_guides <- as.data.frame(table(shared_windows$Result.VPR, shared_windows$Result.KRAB))
colnames(test) <- c("VPR", "KRAB", "Freq")
g <- tab_plot(shared_guides)
pdf("significant_GUIDE.pdf")
g
dev.off()
source("~/Documents/Phox2b/PAPER/visualization/track_plots.R")
# ============================================================================
# Track plots
# ============================================================================
## Report Plotting Test
library(rtracklayer)
library(AnnotationHub)
library(Gviz)
library(Rsamtools)
library(biomaRt)
# ==== colors =====
cold_colors <- c(
"#204051",
"#3B6978",
"#84A9AC",
"#5F6769"
)
my_colors_tracks <- c("#6B8993FF", "white", "#E7695DFF")
# ==== Annotation tracks =====
ATAC <- import.bw("~/Documents/Phox2b/bigwigs/SH-SY5Y_ATAC_inhouse.steric38.hg38.bw")
PHOX2B <- import.bw("~/Documents/Phox2b/bigwigs/GSM2664369_CLBGA.PHOX2B.rep1.wig.bw")
GATA3 <- import.bw("~/Documents/Phox2b/bigwigs/GSM2664370_CLBGA.GATA3.rep1.wig.bw")
HAND2 <- import.bw("~/Documents/Phox2b/bigwigs/GSM2664371_CLBGA.HAND2.rep1.wig.bw")
H3K27AC <- import.bw("~/Documents/Phox2b/bigwigs/SH-SY5Y_H3K27ac_boeva2017.hg38.bw")
ATACtrack <- DataTrack(
range = ATAC,
name = "        ATAC",
type = "histogram",
col.histogram = cold_colors[1],
fill.histogram = cold_colors[1],
background.title = cold_colors[1]
)
PHOX2Btrack <- DataTrack(
range = PHOX2B,
name = "           PHOX2B",
type = "histogram",
col.histogram = cold_colors[3],
fill.histogram = cold_colors[3],
background.title = cold_colors[3]
)
GATA3track <- DataTrack(
range = GATA3,
name = "        GATA3",
type = "histogram",
col.histogram = cold_colors[3],
fill.histogram = cold_colors[3],
background.title = cold_colors[3]
)
HAND2track <- DataTrack(
range = HAND2,
name = "          HAND2",
type = "histogram",
col.histogram = cold_colors[4],
fill.histogram = cold_colors[4],
background.title = cold_colors[4]
)
H3K27ACtrack <- DataTrack(
range = H3K27AC,
name = "             H3K27AC",
type = "histogram",
col.histogram = cold_colors[2],
fill.histogram = cold_colors[2],
background.title = cold_colors[2]
)
# ==== Fixed parameters =====
info <- Seqinfo(seqname = "chr4", genome = "hg38")
chr <- "chr4"
gen <- "hg38"
gtrack <- GenomeAxisTrack()
itrack <- IdeogramTrack(genome = gen, chromosome = chr)
biomart <- useMart(biomart = "ensembl", dataset = "hsapiens_gene_ensembl")
geneTrack <- BiomartGeneRegionTrack(chromosome = chr, genome = gen, biomart = biomart, name = "GeneTrack", background.title = "black")
# ==== regions =====
regions <- readr::read_delim("~/Documents/Phox2b/merged_windows/merged_windowed_500.bed", delim = "\t", col_names = c("Chr", "start", "end", "bins"))
regions <- dplyr::mutate(regions, name = paste("Region", seq(1, nrow(regions), 1), sep = "_")) %>%
dplyr::mutate(BINS = str_split(bins, pattern = ",")) %>%
tidyr::unnest(cols = c(BINS))
regions_gviz <- regions %>%
dplyr::select(Chr, start, end, name) %>%
distinct() %>%
full_join(VPR_results_plot, by = c("name" = "Gene")) %>%
replace_na(list(pvalue = 1, fdr = 1, effect = "fixed", estimate = 0))
regions_gviz_k <- regions %>%
dplyr::select(Chr, start, end, name) %>%
distinct() %>%
full_join(KRAB_results_plot, by = c("name" = "Gene")) %>%
replace_na(list(pvalue = 1, fdr = 1, effect = "fixed", estimate = 0))
# regions
scores <- -log10(regions_gviz$fdr)[-944]
significant <- as.numeric(regions_gviz$fdr < 0.05)[-944]
coeffs <- regions_gviz$estimate[-944]
# Distance plot VPR
df <- regions_gviz %>%
mutate("score" = -log10(fdr)) %>%
mutate("color" = ifelse(fdr < 0.05, ifelse(estimate < 0, "#6B8993FF", "#E7695DFF"), "#D2D2D2FF")) %>%
mutate("sig" = as.numeric(fdr < 0.05)) %>%
drop_na("name")
annot <- makeGRangesFromDataFrame(regions_gviz[-944, ], seqinfo = info)
dataTrack_ns <- DataTrack(range = annot,
data = df$score*sign(df$estimate),
name = "        VPR",
type = "hist",
ylim = c(-60,10),
col.histogram = '#D2D2D2FF',
fill.histogram = '#D2D2D2FF')
dataTrack_down <- DataTrack(range = annot[df$color=='#6B8993FF'],
data = -df$score[df$color=='#6B8993FF'],
name = "        VPR",
ylim = c(-60,10),
type = "hist",
col.histogram = '#6B8993FF',
fill.histogram = '#6B8993FF')
dataTrack_up <- DataTrack(range = annot[df$color=='#E7695DFF'],
data = df$score[df$color=='#E7695DFF'],
name = "        VPR",
ylim = c(-60,10),
type = "hist",
col.histogram = '#E7695DFF',
fill.histogram = '#E7695DFF')
#dataTrack <- OverlayTrack(trackList = list(dataTrack_down,dataTrack_up),background.title='#e76f3d')
dataTrack <- OverlayTrack(trackList = list(dataTrack_ns,dataTrack_down,dataTrack_up),background.title='#e76f3d')
# KRAB
# Distance plot KRAB
df_k <- regions_gviz_k %>%
mutate("score" = -log10(fdr)) %>%
mutate("color" = ifelse(fdr < 0.05, ifelse(estimate < 0, "#6B8993FF", "#E7695DFF"), "#D2D2D2FF")) %>%
drop_na("name")
dataTrack_ns_k <- DataTrack(range = annot,
data = df_k$score*sign(df$estimate),
name = "        KRAB",
type = "hist",
ylim = c(-60,10),
col.histogram = '#D2D2D2FF',
fill.histogram = '#D2D2D2FF')
dataTrack_down_k <- DataTrack(range = annot[df_k$color=='#6B8993FF'],
data = -df_k$score[df_k$color=='#6B8993FF'],
name = "        KRAB",
ylim = c(-60,10),
type = "hist",
col.histogram = '#6B8993FF',
fill.histogram = '#6B8993FF')
dataTrack_up_k <- DataTrack(range = annot[df_k$color=='#E7695DFF'],
data = df_k$score[df_k$color=='#E7695DFF'],
name = "        KRAB",
ylim = c(-60,10),
type = "hist",
col.histogram = '#E7695DFF',
fill.histogram = '#E7695DFF')
#dataTrack_k <- OverlayTrack(trackList = list(dataTrack_down_k,dataTrack_up_k),background.title='#00a7c7')
dataTrack_k <- OverlayTrack(trackList = list(dataTrack_ns_k,dataTrack_down_k,dataTrack_up_k),background.title='#00a7c7')
#mini scale
dataTrack_ns_k_s <- DataTrack(
range = annot,
data = df_k$score*df$estimate,
name = "        KRAB",
ylim = c(0, 3),
type = "hist",
col.histogram = '#E7695DFF',
fill.histogram = '#E7695DFF')
dataTrack_down_k_s <- DataTrack(
range = annot[df_k$color == "#6B8993FF"],
data = df_k$score[df_k$color == "#6B8993FF"],
name = "        KRAB",
ylim = c(0, 3),
type = "hist",
col.histogram= "#6B8993FF",
fill.histogram= "#6B8993FF")
dataTrack_up_k_s <- DataTrack(
range = annot[df_k$color == "#E7695DFF"],
data = df_k$score[df_k$color == "#E7695DFF"],
name = "        KRAB",
ylim = c(0, 3),
type = "hist",
col.histogram = "#E7695DFF",
fill.histogram = "#E7695DFF")
dataTrack_k_s <- OverlayTrack(trackList = list(dataTrack_ns_k, dataTrack_down_k, dataTrack_up_k), background.title = "#00a7c7")
# additional data
geneTrack <- BiomartGeneRegionTrack(
chromosome = chr,
genome = gen,
biomart = biomart,
name = "GeneTrack",
background.title = "black",
start = 40749815, end = 42748835,
col.line = NULL,
col = NULL,
transcriptAnnotation = "symbol",
collapseTranscripts = "longest"
)
sup_df <- data.frame("start" = c(41681648, 41320748), "width" = c(213253, 326103))
superenhancer <- AnnotationTrack(
start = sup_df$start,
width = sup_df$width,
chromosome = chr,
strand = rep("*", 2),
group = c("Enh1", "Enh2"),
genome = gen, name = "Boeva",
background.title = "#7C0A02",
color = "#7C0A02"
)
feature(superenhancer) <- c("Boeva")
hl_phox <- HighlightTrack(geneTrack, start = 41746346, width = 5399, chromosome = chr)
# plotTracks(list(gtrack,dataTrack,geneTrack),transcriptAnnotation = "symbol",from = 40749815, to = 42748835, collapseTranscripts="longest", col.line = NULL)
pdf("both_constructs_distance_score.pdf", width = 10, height = 5)
# Whole TAD
plotTracks(list(dataTrack, ATACtrack, H3K27ACtrack, PHOX2Btrack, HAND2track, gtrack, superenhancer, hl_phox), from = 40749815, to = 42748835, sizes = c(4, 1, 1, 1, 1, 1, 1, 2), groupAnnotation = "group", Boeva = "#7C0A02", legend = TRUE, cex.title = 0.8, rot.title = 1, title.width = 2)
plotTracks(list(dataTrack_k, ATACtrack, H3K27ACtrack, PHOX2Btrack, HAND2track, gtrack, superenhancer, hl_phox), from = 40749815, to = 42748835, sizes = c(4, 1, 1, 1, 1, 1, 1, 2), groupAnnotation = "group", Boeva = "#7C0A02", legend = TRUE, cex.title = 0.8, rot.title = 1, title.width = 2)
plotTracks(list(dataTrack, dataTrack_k, ATACtrack, H3K27ACtrack, PHOX2Btrack, HAND2track, gtrack, superenhancer, hl_phox), from = 40749815, to = 42748835, sizes = c(4, 4, 1, 1, 1, 1, 1, 1, 2), groupAnnotation = "group", Boeva = "#7C0A02", legend = TRUE, cex.title = 0.8, rot.title = 1, title.width = 2)
dev.off()
# Promoter region with bins
df <- VPR_bin_results %>%
mutate("score" = -log10(fdr)) %>%
mutate("color" = ifelse(fdr < 0.05, ifelse(coeff < 0, "#6B8993FF", "#E7695DFF"), "#D2D2D2FF")) %>%
mutate("sig" = as.numeric(fdr < 0.05))%>%
filter(!is.na(fdr))
annot <- makeGRangesFromDataFrame(df, seqinfo = info, start.field = "start.bin", end.field = "end.bin", seqnames.field = "Chr.bin")
#==== VPR =====
dataTrack_ns <- DataTrack(range = annot,
data = df$score*sign(df$coeff),
name = "        VPR",
type = "hist",
ylim = c(-8,8),
col.histogram = '#D2D2D2FF',
fill.histogram = '#D2D2D2FF')
dataTrack_down <- DataTrack(range = annot[df$color=='#6B8993FF'],
data = -df$score[df$color=='#6B8993FF'],
name = "        VPR",
ylim = c(-8,8),
type = "hist",
col.histogram = '#6B8993FF',
fill.histogram = '#6B8993FF')
dataTrack_up <- DataTrack(range = annot[df$color=='#E7695DFF'],
data = df$score[df$color=='#E7695DFF'],
name = "        VPR",
ylim = c(-8,8),
type = "hist",
col.histogram = '#E7695DFF',
fill.histogram = '#E7695DFF')
#dataTrack <- OverlayTrack(trackList = list( dataTrack_down,dataTrack_up),background.title='#e76f3d')
dataTrack <- OverlayTrack(trackList = list(dataTrack_ns, dataTrack_down,dataTrack_up),background.title='#e76f3d')
# KRAB
df_k <- KRAB_bin_results %>%
mutate("score" = -log10(fdr)) %>%
mutate("color" = ifelse(fdr < 0.05, ifelse(coeff < 0, "#6B8993FF", "#E7695DFF"), "#D2D2D2FF")) %>%
mutate("sig" = as.numeric(fdr < 0.05))
dataTrack_k <- DataTrack(
range = annot,
data = df_k$coeff,
name = "    KRAB",
ylim = c(-0.04, 0.04),
type = "heatmap",
gradient = c("#6B8993FF", "white", "#E7695DFF"),
background.title = "#00a7c7"
)
dataTrack2_k <- DataTrack(
range = annot,
data = df_k$score,
name = "    KRAB",
ylim = c(0, 8),
type = "heatmap",
gradient = c("white", "black"),
background.title = "#00a7c7"
)
# dataTrack_k <- OverlayTrack(trackList = list(dataTrack_ns_k,dataTrack_down_k,dataTrack_up_k),background.title='#00a7c7')
pdf("both_constructs_distance_score_promoter.pdf", width = 10, height = 5)
plotTracks(list(dataTrack, ATACtrack, H3K27ACtrack, PHOX2Btrack, HAND2track, gtrack, superenhancer, hl_phox), from = 41734346, to = 41763745, sizes = c(4, 1, 1, 1, 1, 1, 1, 2), groupAnnotation = "group", Boeva = "#7C0A02", legend = TRUE, cex.title = 0.8, rot.title = 1, title.width = 2)
plotTracks(list(dataTrack_k, ATACtrack, H3K27ACtrack, PHOX2Btrack, HAND2track, gtrack, superenhancer, hl_phox), from = 41734346, to = 41763745, sizes = c(4, 1, 1, 1, 1, 1, 1, 2), groupAnnotation = "group", Boeva = "#7C0A02", legend = TRUE, cex.title = 0.8, rot.title = 1, title.width = 2)
plotTracks(list(dataTrack, dataTrack_k, ATACtrack, H3K27ACtrack, PHOX2Btrack, HAND2track, gtrack, superenhancer, hl_phox), from = 41734346, to = 41763745, sizes = c(4, 4, 1, 1, 1, 1, 1, 1, 2), groupAnnotation = "group", Boeva = "#7C0A02", legend = TRUE, cex.title = 0.8, rot.title = 1, title.width = 2)
dev.off()
